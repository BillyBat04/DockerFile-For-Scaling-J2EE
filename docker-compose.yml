version: '3'

services:
  mysql-docker-container:
    image: mysql:latest
    environment:
      - MYSQL_ROOT_PASSWORD=123123
      - MYSQL_DATABASE=postservicequerry
      - MYSQL_USER=namdam1123
      - MYSQL_PASSWORD=123123
    volumes:
      - /data/mysql:/var/lib/mysql
    ports:
      - 3307:3306
    container_name: mysql-db

  postservicequerry1:
    image: query-service
    build:
      context: ./
      dockerfile: Dockerfile
    depends_on:
      - mysql-docker-container
    ports:
      - 8081:8082
    volumes:
      - /data/spring-boot-app:/app
    environment:
      - SPRING_PROFILES_ACTIVE=8081 # Sử dụng cấu hình tạm thời
    container_name: postservicequerry1
    restart: always

  postservicequerry2:
    image: namdam1123/postservicequerry
    build:
      context: ./
      dockerfile: Dockerfile
    depends_on:
      - mysql-docker-container
    ports:
      - 8082:8082
    volumes:
      - /data/spring-boot-app:/app
    environment:
      - SPRING_PROFILES_ACTIVE=8082 # Sử dụng cấu hình tạm thời
    container_name: postservicequerry2
    restart: always

  postservicecommand:
    image: namdam1123/postservicecommand # Image mới cho API postservicecommand
    build:
      context: ./postservicecommand # Đảm bảo đường dẫn đúng nếu bạn dùng Dockerfile riêng
      dockerfile: Dockerfile
    depends_on:
      - mysql-docker-container
    ports:
      - 8080:8080 # Port khác với postservicequerry
    volumes:
      - "D:/Desktop/J2EE/J2EEDemo/postservicecommand:/app"
    container_name: postservicecommand
    restart: always

  nginx:
    image: nginx:latest
    ports:
      - 8083:8080 # Load balancer lắng nghe cổng 8080
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf # Tải cấu hình nginx từ tệp nginx.conf
    depends_on:
      - postservicequerry1
      - postservicequerry2
    container_name: nginx-loadbalancer
    restart: always

  zookeeper:
    image: wurstmeister/zookeeper:latest
    ports:
      - "2181:2181"

  kafka:
    image: wurstmeister/kafka:latest
    ports:
      - "9093:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9092,OUTSIDE://localhost:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9092,OUTSIDE://0.0.0.0:9093
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    depends_on:
      - zookeeper
